--- a/net/minecraft/world/level/LevelAccessor.java
+++ b/net/minecraft/world/level/LevelAccessor.java
@@ -28,6 +28,7 @@
 import net.minecraft.world.ticks.TickPriority;
 
 public interface LevelAccessor extends CommonLevelAccessor, LevelTimeAccess {
+
     @Override
     default long dayTime() {
         return this.getLevelData().getDayTime();
@@ -38,11 +39,11 @@
     LevelTickAccess<Block> getBlockTicks();
 
     private <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay, TickPriority priority) {
-        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long)delay, priority, this.nextSubTickCount());
+        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long) delay, priority, this.nextSubTickCount());
     }
 
     private <T> ScheduledTick<T> createTick(BlockPos pos, T type, int delay) {
-        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long)delay, this.nextSubTickCount());
+        return new ScheduledTick<>(type, pos, this.getLevelData().getGameTime() + (long) delay, this.nextSubTickCount());
     }
 
     default void scheduleTick(BlockPos pos, Block block, int delay, TickPriority priority) {
@@ -83,8 +84,7 @@
 
     RandomSource getRandom();
 
-    default void blockUpdated(BlockPos pos, Block block) {
-    }
+    default void blockUpdated(BlockPos pos, Block block) {}
 
     default void neighborShapeChanged(Direction direction, BlockState neighborState, BlockPos pos, BlockPos neighborPos, int flags, int maxUpdateDepth) {
         NeighborUpdater.executeShapeUpdate(this, direction, neighborState, pos, neighborPos, flags, maxUpdateDepth - 1);
@@ -101,17 +101,17 @@
     void levelEvent(@Nullable Player player, int eventId, BlockPos pos, int data);
 
     default void levelEvent(int eventId, BlockPos pos, int data) {
-        this.levelEvent(null, eventId, pos, data);
+        this.levelEvent((Player) null, eventId, pos, data);
     }
 
     void gameEvent(Holder<GameEvent> event, Vec3 emitterPos, GameEvent.Context emitter);
 
     default void gameEvent(@Nullable Entity entity, Holder<GameEvent> event, Vec3 pos) {
-        this.gameEvent(event, pos, new GameEvent.Context(entity, null));
+        this.gameEvent(event, pos, new GameEvent.Context(entity, (BlockState) null));
     }
 
     default void gameEvent(@Nullable Entity entity, Holder<GameEvent> event, BlockPos pos) {
-        this.gameEvent(event, pos, new GameEvent.Context(entity, null));
+        this.gameEvent(event, pos, new GameEvent.Context(entity, (BlockState) null));
     }
 
     default void gameEvent(Holder<GameEvent> event, BlockPos pos, GameEvent.Context emitter) {
@@ -119,6 +119,8 @@
     }
 
     default void gameEvent(ResourceKey<GameEvent> event, BlockPos pos, GameEvent.Context emitter) {
-        this.gameEvent(this.registryAccess().registryOrThrow(Registries.GAME_EVENT).getHolderOrThrow(event), pos, emitter);
+        this.gameEvent((Holder) this.registryAccess().registryOrThrow(Registries.GAME_EVENT).getHolderOrThrow(event), pos, emitter);
     }
+
+    net.minecraft.server.level.ServerLevel getMinecraftWorld(); // CraftBukkit
 }
